//********************************************************************
//  CoordinatesPanel.java       Java Foundations
//
//  Represents the primary panel for the Coordinates program.
//********************************************************************

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class GamePanel extends JPanel
{
   private final int SIZE = 6;  // diameter of dot

   private int x = 50, y = 50;  // coordinates of mouse press
   private final int WIDTH = 800, HEIGHT = 600;
   private final int DELAY = 20, IMAGE_SIZE = 35; //delay in milliseconds

   private ImageIcon image;
   private Timer timer;
   private int x1, y1, moveX, moveY;


   //-----------------------------------------------------------------
   //  Constructor: Sets up this panel to listen for mouse events.
   //-----------------------------------------------------------------
   public GamePanel()
   {
      addMouseListener (new CoordinatesListener());

      timer = new Timer(DELAY, new ReboundListener());

      image = new ImageIcon ("resources/happyFace.gif");

      x = (int)(Math.random()*800);
      y = (int)(Math.random()*600);
      moveX = moveY = 3;

      setPreferredSize (new Dimension(WIDTH, HEIGHT));
      setBackground (Color.black);
      timer.start();

   }

   //-----------------------------------------------------------------
   //  Draws all of the dots stored in the list.???
   //-----------------------------------------------------------------
   public void paintComponent (Graphics page)
   {
      super.paintComponent(page);

      page.setColor (Color.green);

      page.fillOval (x, y, SIZE, SIZE);

      page.drawString ("Coordinates: (" + x + ", " + y + ")", 5, 15);

      image.paintIcon (this, page, x1, y1); //"this" is the ReboundPanel instances according to the debugger 
   }

   //*****************************************************************
   //  Represents the listener for mouse events.
   //*****************************************************************
   private class CoordinatesListener implements MouseListener
   {
      //--------------------------------------------------------------
      //  Adds the current point to the list of points ??? and redraws
      //  the panel whenever the mouse button is pressed.
      //--------------------------------------------------------------
      public void mousePressed (MouseEvent event)
      {
         x = event.getX();
         y = event.getY();
         repaint();
      }

      //--------------------------------------------------------------
      //  Provide empty definitions for unused event methods.
      //--------------------------------------------------------------
      public void mouseClicked (MouseEvent event) {}
      public void mouseReleased (MouseEvent event) {}
      public void mouseEntered (MouseEvent event) {}
      public void mouseExited (MouseEvent event) {}
   }


   //*****************************************************************
   //  Represents the action listener for the timer.
   //*****************************************************************
   private class ReboundListener implements ActionListener
   {
      //--------------------------------------------------------------
      //  Updates the position of the image and possibly the direction
      //  of movement whenever the timer fires an action event.
      //--------------------------------------------------------------
      public void actionPerformed (ActionEvent event)
      {
         x += moveX;
         y += moveY;

         if (x <= 0 || x >= WIDTH - IMAGE_SIZE)
            moveX = moveX * -1;

         if (y <= 0 || y >= HEIGHT - IMAGE_SIZE)
            moveY = moveY * -1;
    
         //this will eventually call the ReboundPanel's paintComponent method (somewhere in a proper sequence of graphical drawing events
         repaint(); 
      }
   }
}


